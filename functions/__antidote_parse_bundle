#!/bin/zsh

### Parse antidote's bundle DSL to an associative array.
# Example:
#   __antidote_parse_bundle 'foo/bar path:plugins/baz kind:fpath pre:myprecmd  # comment'
#   typeset -A parsed_bundle=( [kind]=fpath [path]=plugins/baz [pre]=myprecmd [name]=foo/bar )
#function __antidote_parse_bundle {
  emulate -L zsh; setopt local_options $_adote_funcopts
  local bundle varname pair key value declare_output
  local -A parsed_bundle

  bundle="$1"
  varname="${2:-parsed_bundle}"

  # Remove anything after the first '#'
  bundle=${bundle%%\#*}
  # Trim spaces
  bundle=${${bundle/#[[:space:]]#}/%[[:space:]]#}
  # Skip empty bundle strings
  [[ -z "$bundle" ]] && return
  # 1st field gets 'name:' prefix for key:val throughout
  bundle="name:${bundle}"

  local -a args=(${(Q)${(z)bundle}})  # Split line into key-value pairs, handling quotes

  for pair in "${args[@]}"; do
    key=${pair%%:*}   # Extract key (before first ':')
    value=${pair#*:}  # Extract value (after first ':')

    parsed_bundle[$key]=$value
  done

  # Enhance the bundle with metadata fields
  parsed_bundle[_type]="$(__antidote_bundle_type ${parsed_bundle[name]})"
  parsed_bundle[_dir]="$(__antidote_bundle_dir ${parsed_bundle[name]})"
  parsed_bundle[_url]="$(__antidote_bundle_url ${parsed_bundle[name]})"
  parsed_bundle[_repo]="$(__antidote_bundle_repo ${parsed_bundle[name]})"

  # Print the resulting parsed bundle associative array
  declare_output="$(declare -p parsed_bundle)"
  typeset -g REPLY="typeset -A ${varname}=${declare_output#*=}"
  print -r -- "$REPLY"
#}
