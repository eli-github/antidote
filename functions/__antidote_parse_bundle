#!/bin/zsh

### Parse antidote's bundle DSL to an associative array.
# Example:
#   __antidote_parse_bundle 'foo/bar path:plugins/baz kind:fpath pre:myprecmd  # comment'
#   typeset -A parsed_bundle=( [kind]=fpath [path]=plugins/baz [pre]=myprecmd [name]=foo/bar )
#function __antidote_parse_bundle {
  emulate -L zsh; setopt local_options $_adote_funcopts
  local bundle pair key value
  local -A parsed_bundle

  bundle="$1"
  bundle=${bundle%%\#*}          # Remove anything after the first '#'
  bundle=${bundle%%[[:space:]]}  # Trim trailing spaces
  bundle=${bundle##[[:space:]]}  # Trim leading spaces
  [[ -z "$bundle" ]] && return   # Skip empty bundle strings
  bundle="ref:${bundle}"         # 1st field gets 'ref:' prefix for key:val throughout

  local -a args=(${(Q)${(z)bundle}})  # Split line into key-value pairs, handling quotes

  for pair in "${args[@]}"; do
    key=${pair%%:*}   # Extract key (before first ':')
    value=${pair#*:}  # Extract value (after first ':')

    parsed_bundle[$key]=$value
  done

  # Enhance the bundle with metadata fields
  # parsed_bundle[_type]="$(__antidote_bundle_type ${parsed_bundle[ref]})"
  # parsed_bundle[_dir]="$(__antidote_bundle_dir ${parsed_bundle[ref]})"
  # parsed_bundle[_url]="$(__antidote_bundle_url ${parsed_bundle[ref]})"
  # parsed_bundle[_name]="$(__antidote_bundle_name ${parsed_bundle[ref]})"

  # Print the resulting parsed bundle associative array
  typeset -g REPLY="$(declare -p parsed_bundle)"
  print -r -- "$REPLY"
#}
